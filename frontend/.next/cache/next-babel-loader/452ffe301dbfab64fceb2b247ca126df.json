{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/lazarvasic/Projects/graphqlStart/frontend/components/Users.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_USERS_QUERY {\\n    getUsers {\\n      id\\n      firstname\\n      lastname\\n      billingTransaction {\\n        payment\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nvar ALL_USERS_QUERY = gql(_templateObject());\n\nvar Users = /*#__PURE__*/function (_React$Component) {\n  _inherits(Users, _React$Component);\n\n  var _super = _createSuper(Users);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Users, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, \"Users page\", __jsx(Query, {\n        query: ALL_USERS_QUERY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            error = _ref.error,\n            loading = _ref.loading;\n        if (loading) return __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }\n        }, \"Loading...\");\n        if (error) return __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 31\n          }\n        }, \"Error: \", error.message);\n        return __jsx(\"div\", {\n          className: \"user\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }\n        }, \"hr\", data.getUsers.map(function (user) {\n          return __jsx(\"div\", {\n            className: \"user\",\n            key: \"user.id\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }\n          }, __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }\n          }, user.id), __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }\n          }, user.firstname), __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }\n          }, user.lastname), __jsx(\"hr\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }\n          }));\n        }));\n      }));\n    }\n  }]);\n\n  return Users;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/lazarvasic/Projects/graphqlStart/frontend/components/Users.js"],"names":["React","Component","Query","gql","ALL_USERS_QUERY","Users","data","error","loading","message","getUsers","map","user","id","firstname","lastname"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,eAAe,GAAGD,GAAH,mBAArB;;IAaME,K;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BE,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,KAAqB,QAArBA,KAAqB;AAAA,YAAdC,OAAc,QAAdA,OAAc;AAC7B,YAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACb,YAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,eACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,UAACC,IAAD;AAAA,iBACjB;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,IAAI,CAACC,EAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,SAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIF,IAAI,CAACG,QAAT,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADiB;AAAA,SAAlB,CAFH,CADF;AAaD,OAjBH,CAFF,CADF;AAwBD;;;;EA1BiBf,KAAK,CAACC,S;;AA4B1B,eAAeI,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    getUsers {\n      id\n      firstname\n      lastname\n      billingTransaction {\n        payment\n      }\n    }\n  }\n`;\n\nclass Users extends React.Component {\n  render() {\n    return (\n      <div>\n        Users page\n        <Query query={ALL_USERS_QUERY}>\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <div className=\"user\">\n                hr\n                {data.getUsers.map((user) => (\n                  <div className=\"user\" key=\"user.id\">\n                    <p>{user.id}</p>\n                    <p>{user.firstname}</p>\n                    <p>{user.lastname}</p>\n                    <hr />\n                  </div>\n                ))}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}